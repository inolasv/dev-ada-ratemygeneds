{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PromiseProvider = void 0;\n\nconst error_1 = require(\"./error\");\n/** @internal */\n\n\nconst kPromise = Symbol('promise');\nconst store = {\n  [kPromise]: undefined\n};\n/**\n * Global promise store allowing user-provided promises\n * @public\n */\n\nclass PromiseProvider {\n  /** Validates the passed in promise library */\n  static validate(lib) {\n    if (typeof lib !== 'function') throw new error_1.MongoInvalidArgumentError(`Promise must be a function, got ${lib}`);\n    return !!lib;\n  }\n  /** Sets the promise library */\n\n\n  static set(lib) {\n    if (!PromiseProvider.validate(lib)) {\n      // validate\n      return;\n    }\n\n    store[kPromise] = lib;\n  }\n  /** Get the stored promise library, or resolves passed in */\n\n\n  static get() {\n    return store[kPromise];\n  }\n\n}\n\nexports.PromiseProvider = PromiseProvider;\nPromiseProvider.set(global.Promise);","map":null,"metadata":{},"sourceType":"script"}