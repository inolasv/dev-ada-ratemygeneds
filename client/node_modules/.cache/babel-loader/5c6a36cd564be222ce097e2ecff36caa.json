{"ast":null,"code":"var _jsxFileName = \"/Users/inola/Desktop/Spring22/RSOs/dev-ada-ratemygeneds-1/client/src/components/Home.js\";\nimport '../stylesheets/Search.css';\nimport React, { Component, useState } from 'react';\nimport Course from './courseList';\nimport star from '../star.png';\nexport default function Search() {\n  const [courses, setCourses] = useState([]);\n  const [searchValue, setSearchValue] = useState([]);\n  const quotes = ['This class was super straightforward, I really loved learning about the topic and was able to dive deeper with our group projects. Definitely would suggest taking!', \"I hated this class so much. There was so much work every week, and the professor always graded super harshly, and wouldn't give much feedback to students. If you can, I'd suggest taking another gened.\", \"This class was moderate in workload, but it doesn't have a final exam or midterms, just weekly quizzes that are super easy to do, and discussions are always fun to go to, I'm always wide awake during this class!\"];\n\n  const MongoClient = require(\"mongodb\").MongoClient;\n\n  const assert = require(\"assert\");\n\n  const agg = [{\n    $search: {\n      text: {\n        query: \"baseball\",\n        path: \"plot\"\n      }\n    }\n  }, {\n    $limit: 5\n  }, {\n    $project: {\n      _id: 0,\n      title: 1,\n      plot: 1\n    }\n  }];\n  MongoClient.connect(\"<connection-string>\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  }, async function (connectErr, client) {\n    assert.equal(null, connectErr);\n    const coll = client.db(\"sample_mflix\").collection(\"movies\");\n    let cursor = await coll.aggregate(agg);\n    await cursor.forEach(doc => console.log(doc));\n    client.close();\n  });\n\n  const handleOnChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const courseList = () => {\n    return courses.map(course => {\n      return /*#__PURE__*/React.createElement(Course, {\n        course: course,\n        key: course._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      });\n    });\n  };\n\n  const handleSearch = () => {\n    console.log('this is what you typed: ', searchValue);\n    getFilteredCourses(searchValue);\n  };\n\n  const getFilteredCourses = searchInput => {\n    async function getCourses() {\n      //this is bad right now copied from another file\n      const response = await fetch(`http://localhost:5000/courses/${searchInput}`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const courses = await response.json();\n      console.log(courses);\n      setCourses(courses);\n    }\n\n    getCourses();\n  };\n\n  const determineClass = type => {\n    if (type === \"\") {\n      return \"none\";\n    }\n\n    return \"box\";\n  };\n\n  const makeStars = () => {\n    const stars = [];\n\n    for (var i = 0; i < Math.random() * 5; i++) {\n      stars.push( /*#__PURE__*/React.createElement(\"img\", {\n        src: star,\n        alt: \"Star\",\n        className: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    return stars;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Rate My Gen-Eds @ UIUC\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"text\",\n    type: \"text\",\n    placeholder: \"search for a course or requirement\",\n    onChange: event => handleOnChange(event),\n    value: searchValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Search\")), courses.map((course, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-result-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, course.Course, \" : \", course['Course Title'], /*#__PURE__*/React.createElement(\"p\", {\n    className: determineClass(course['ACP']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, course['ACP']), /*#__PURE__*/React.createElement(\"p\", {\n    className: determineClass(course['CS']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, course['CS']), /*#__PURE__*/React.createElement(\"p\", {\n    className: determineClass(course['HUM']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, course['HUM']), /*#__PURE__*/React.createElement(\"p\", {\n    className: determineClass(course['NAT']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, course['NAT']), /*#__PURE__*/React.createElement(\"p\", {\n    className: determineClass(course['QR']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, course['QR']), /*#__PURE__*/React.createElement(\"p\", {\n    className: determineClass(course['SBS']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, course['SBS']), makeStars()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, quotes[Math.floor(Math.random() * 3) + 0]))));\n}","map":{"version":3,"sources":["/Users/inola/Desktop/Spring22/RSOs/dev-ada-ratemygeneds-1/client/src/components/Home.js"],"names":["React","Component","useState","Course","star","Search","courses","setCourses","searchValue","setSearchValue","quotes","MongoClient","require","assert","agg","$search","text","query","path","$limit","$project","_id","title","plot","connect","useNewUrlParser","useUnifiedTopology","connectErr","client","equal","coll","db","collection","cursor","aggregate","forEach","doc","console","log","close","handleOnChange","event","target","value","courseList","map","course","handleSearch","getFilteredCourses","searchInput","getCourses","response","fetch","ok","message","statusText","window","alert","json","determineClass","type","makeStars","stars","i","Math","random","push","index","floor"],"mappings":"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","sourcesContent":["import '../stylesheets/Search.css';\nimport React, { Component, useState } from 'react';\nimport Course from './courseList';\nimport star from '../star.png'\n\nexport default function Search() {\n\n  const [courses, setCourses] = useState([]);\n  const [searchValue, setSearchValue] = useState([]);\n\n  const quotes = [\n    'This class was super straightforward, I really loved learning about the topic and was able to dive deeper with our group projects. Definitely would suggest taking!',\n    \"I hated this class so much. There was so much work every week, and the professor always graded super harshly, and wouldn't give much feedback to students. If you can, I'd suggest taking another gened.\",\n    \"This class was moderate in workload, but it doesn't have a final exam or midterms, just weekly quizzes that are super easy to do, and discussions are always fun to go to, I'm always wide awake during this class!\",\n  ];\n\n  const MongoClient = require(\"mongodb\").MongoClient;\nconst assert = require(\"assert\");\nconst agg = [\n  {\n    $search: {\n      text: {\n        query: \"baseball\",\n        path: \"plot\",\n      },\n    },\n  },\n  {\n    $limit: 5,\n  },\n  {\n    $project: {\n      _id: 0,\n      title: 1,\n      plot: 1,\n    },\n  },\n];\nMongoClient.connect(\n  \"<connection-string>\",\n  { useNewUrlParser: true, useUnifiedTopology: true },\n  async function (connectErr, client) {\n    assert.equal(null, connectErr);\n    const coll = client.db(\"sample_mflix\").collection(\"movies\");\n    let cursor = await coll.aggregate(agg);\n    await cursor.forEach((doc) => console.log(doc));\n    client.close();\n  }\n);\n\n\n  const handleOnChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const courseList = () => {\n    return courses.map((course) => {\n      return <Course course={course} key={course._id} />;\n    });\n  };\n\n  const handleSearch = () => {\n    console.log('this is what you typed: ', searchValue);\n    getFilteredCourses(searchValue);\n  };\n\n  const getFilteredCourses = (searchInput) => {\n    async function getCourses() {\n      //this is bad right now copied from another file\n      const response = await fetch(\n        `http://localhost:5000/courses/${searchInput}`\n      );\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const courses = await response.json();\n      console.log(courses);\n      setCourses(courses);\n    }\n    getCourses();\n  };\n  \n  const determineClass = (type) => {\n    if (type === \"\") {\n      return \"none\"\n    }\n    return \"box\"\n  }\n\n  const makeStars = () => {\n    const stars = [];\n    for(var i = 0; i < Math.random() * 5; i++) {\n      stars.push(<img src={star} alt=\"Star\" className=\"star\"/>);\n    }\n    return stars;\n  }\n\n\n  return (\n    <div className=\"search-wrapper\">\n      <p className=\"sign-in\">Sign in</p>\n      <h1 className=\"title\">Rate My Gen-Eds @ UIUC</h1>\n      {/* <p>This is what you typed: {searchValue}</p> */}\n      <input\n        name='text'\n        type='text'\n        placeholder='search for a course or requirement'\n        onChange={(event) => handleOnChange(event)}\n        value={searchValue}\n      />\n      <div>\n      <button onClick={handleSearch}>Search</button>\n      </div>\n      {courses.map((course, index) => (\n        <div key={index}>\n          <div className=\"search-result-wrapper\">\n            {course.Course} : {course['Course Title']}\n            <p className={determineClass(course['ACP'])}>{ course['ACP'] }</p> \n            <p className={determineClass(course['CS'])}>{ course['CS'] }</p> \n            <p className={determineClass(course['HUM'])}>{ course['HUM'] }</p> \n            <p className={determineClass(course['NAT'])}>{ course['NAT'] }</p> \n            <p className={determineClass(course['QR'])}>{course['QR']}</p> \n            <p className={determineClass(course['SBS'])}>{course['SBS']}</p>\n            {makeStars()}\n\n          </div>\n          <div className=\"review\">\n          {quotes[Math.floor(Math.random() * 3) + 0]}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}